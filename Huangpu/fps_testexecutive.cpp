#include <QtWidgets>
#include "fps_testexecutive.h"

FPS_TestExecutive::FPS_TestExecutive(QWidget *parent)
	: QMainWindow(parent)
{
	ui.setupUi(this);
	m_deviceHandle = Init();
	//QObject::connect(ui.pushButtonGetVer, SIGNAL(clicked()), this, SLOT(GetVersion()));
	//QObject::connect(ui.pushButtonPowerOn, SIGNAL(clicked()), this, SLOT(DutPowerOn()));
	//QObject::connect(ui.pushButtonPowerOff, SIGNAL(clicked()), this, SLOT(DutPowerOff()));
	//QObject::connect(ui.pushButtonStart, SIGNAL(clicked()), ui.textEdit, SLOT(setText("Clicked.\n")));
}

uint32_t FPS_TestExecutive::Init()
{
	ui.textBrowser->append("Hello World");
	/*MPC_Initialize(); 
	int deviceNum;
	MPC_GetNumberOfDevices(&deviceNum);
	QString s = "DeviceNum: " + QString::number(deviceNum);
	ui.textBrowser->append(s);
	//parse_config();
	uint32_t DeviceSN[8];
	MPC_GetDeviceSerialNumList(DeviceSN);

	for(int i=0; i<deviceNum; i++){
		QString s = "Device SN: " + QString::number(DeviceSN[i]);
		ui.textBrowser->append(s);
	}
	uint32_t deviceHandle;
	MPC_GetMpcDeviceHandle(DeviceSN[0], &deviceHandle);

	MPC_Connect(deviceHandle);
	::Sleep(2);
	if(MPC_IsConnected(deviceHandle)){
		ui.textBrowser->append("Device Connected.");

		// Set SPI port
		MPC_SetPortFpSensor(deviceHandle, 0, 0x0008, 8000, 0, 0, 2000);

		return deviceHandle;
	}
	else{
		ui.textBrowser->append("Device Not Connected.");
		return -1;
	}*/

	QString qstrValue;
	std::string strValue;
	bool bResult = Syn_DutOperation::StartDutOperation(_ListOfDutPtr, strValue);

	QString qCounts = _ListOfDutPtr.size();

	qstrValue.fromStdString(strValue);
	//ui.textBrowser->append(qstrValue);
	//ui.textBrowser->append(qCounts);

	if (0 == _ListOfDutPtr.size())
	{
		QString qResult("Can't retrieve the device!");
		ui.textBrowser->append(qResult);
		
	}
	else
	{
		QString qResult("Devices are ready!");
		ui.textBrowser->append(qResult);
	}



	return -1;
}

int FPS_TestExecutive::DutPowerOn()
{
	uint16_t error(1);
	/*
	// Power on sensor
	error = MPC_SetVoltages(m_deviceHandle, 3300, 3300, 3300, 3300, 200);
	::Sleep(5);

	// Disable Sleep
	uint8_t pDst[4]={0};
	error = MPC_FpGetStatus(m_deviceHandle, pDst, 4, 2000);
	Display(pDst, sizeof(pDst));
	uint8_t timeout = 200;
	while(timeout && ((pDst[0] != 0x01) || (pDst[1] != 0x00) || (pDst[2] != 0x00) || (pDst[3] != 0x08)))
	{
		error = MPC_FpGetStatus(m_deviceHandle, pDst, 4, 2000);
		Display(pDst, sizeof(pDst));
		timeout--;
	}

	uint8_t pSrc[2]={0};
	error = MPC_FpWrite(m_deviceHandle, 1, 0x0057, pSrc, sizeof(pSrc), 200);
	error = MPC_FpGetStatus(m_deviceHandle, pDst, 4, 2000);
	Display(pDst, sizeof(pDst));*/

	/*auto iCounts = _ListOfDutPtr.size();
	for (auto i = 0; i < iCounts; i++)
	{
		uint8_t pDst[4] = { 0 };
		bool bResult = (_ListOfDutPtr[i])->GetDutCtrl()->PowerOn(pDst, 4);
		if (bResult)
		{
			Display(pDst, sizeof(pDst));
		}
	}*/

	return error;
}

int FPS_TestExecutive::DutPowerOff()
{
	uint16_t error(1);
	// Power on sensor
	/*error = MPC_SetVoltages(m_deviceHandle, 0, 0, 0, 0, 200);
	::Sleep(5);*/

	/*auto iCounts = _ListOfDutPtr.size();
	for (auto i = 0; i < iCounts; i++)
	{
		bool bResult = (_ListOfDutPtr[i])->GetDutCtrl()->PowerOff();
		if (bResult)
		{
			QString qResult("Device is powerof!");
			ui.textBrowser->append(qResult);
		}
	}*/


	return error;
}

int FPS_TestExecutive::GetVersion()
{
	//MPC_GpioSetPinType(m_deviceHandle, 7, 0x10, 6, 2000);	//Pin 16 = output (Ext reset)
	//MPC_GpioPinWrite(m_deviceHandle, 7, 0x10, 0x0, 2000);	//Set pin 16 high (reverse logic).

	/*int i = 1;
	while(i>0){
		::Sleep(20);
		uint8_t	pDst[VERSION_SIZE] = {0};
		MPC_FpGetVersion(m_deviceHandle, pDst, VERSION_SIZE, 2000);
		ui.textBrowser->append("GetVersion:");
		Display(pDst, VERSION_SIZE);
		i--;
	}*/

	/*auto iCounts = _ListOfDutPtr.size();
	for (auto i = 0; i < iCounts; i++)
	{
		uint8_t	pDst[VERSION_SIZE] = { 0 };
		bool bResult = (_ListOfDutPtr[i])->GetDutCtrl()->FpGetVersion(pDst, VERSION_SIZE);
		if (bResult)
		{
			Display(pDst, sizeof(pDst));
		}
	}*/
		
		//MPC_FpGetStatus(deviceHandle, pDst, 4, 2000);
		
		//::Sleep(500);
		
		
		// Load MT test patch
		//string sOTPreadPath
		
		//string sOTPreadPath = "0200000187";
		//int m_nSize = sOTPreadPath.length() / 2;
		//int* m_pBuf = new int[m_nSize];

		//ConvertAsciiToBinary(sOTPreadPath, m_pBuf, m_nSize);

		

		//Get boot sector 0
		//uint8_t	bootSector0[BS0_SIZE] = {0};
		//MPC_FpOtpRomRead(deviceHandle, BOOT_SEC, 0, bootSector0, BS0_SIZE,2000);
		
		//uint8_t mainSector0[MS0_SIZE] = {0};
		//MPC_FpOtpRomRead(deviceHandle, MAIN_SEC, 0, mainSector0, MS0_SIZE,2000);

		//QString s2 = "";
		//for(int i=0; i<MS0_SIZE; i++){

			//s2 += QString::number(mainSector0[i], 16) + ",";
			
			//if((i+1)%8 == 0){
				//ui.textBrowser->append(s);
				//s2 = "";
			//}
			
		//}
	return 0;
}


void FPS_TestExecutive::Display(uint8_t* pDst, int DstSize)
{
	QString s = "";
	for(int i=0; i<DstSize; i++){
		s += QString::number(pDst[i], 16) + ",";
	}
	ui.textBrowser->append(s);
}


void FPS_TestExecutive::ConvertAsciiToBinary(const string& sAscii, int* pDst, int nDstSize)
{
	string sTemp;
	int*	p;
	int		nNumBytes = sAscii.length() / 2;

	//Translate the ASCII into binary values.
	for (int i=0; (i<nNumBytes) && (i<nDstSize); i++)
	{
		sTemp = sAscii[i*2];
		sTemp += sAscii[(i*2)+1];

		stringstream ss;
		ss << sTemp;
		int nVal;
		ss >> nVal;
		pDst[i] = nVal;
	}
}

void FPS_TestExecutive::parse_config()
{
	QString strFilePath("C:\\Users\\hfan\\Desktop\\580-00xxx-01r4(FM-000133)_ZTE.xml");
	SysConfig *pSysConfig = new SysConfig(strFilePath);

	QString strNodeName("CreatedByRevision"),strNodeText("");
	bool bResult = pSysConfig->GetElementNodeText(strNodeName,strNodeText);
	//cout<<"Node Text is "<<strNodeText.toStdString()<<endl;
	ui.textBrowser->append(strNodeName+"---------->"+strNodeText);

	QString strImageAcqPatchName("ImageAcqPatch"),strImageAcqPatchValue("");
	QString strAttributeName("Args"),strAttributeValue("");
	bResult = pSysConfig->GetElementNodeTextAndAttribute(strImageAcqPatchName,strImageAcqPatchValue,strAttributeName,strAttributeValue);
	//cout<<"Result is "<<strImageAcqPatchValue.toStdString()<<","<<strAttributeValue.toStdString()<<endl;
	ui.textBrowser->append(strImageAcqPatchName+"---------->"+strImageAcqPatchValue+"----------->"+strAttributeName+"----->"+strAttributeValue);

	std::vector<TestSeqInfo> ListOfTestSeqInfo;
	bResult = pSysConfig->GetTestSeqList(ListOfTestSeqInfo);
	for(int i=1;i<=ListOfTestSeqInfo.size();i++)
	{
		TestSeqInfo CurrentInfo = ListOfTestSeqInfo[i-1];
		cout<<i<<" is "<<CurrentInfo.strNodeName.toStdString()<<","<<CurrentInfo.strSeqText.toStdString()<<","<<CurrentInfo.strSeqAttribute.toStdString()<<endl;
	}

	delete pSysConfig;
	pSysConfig = NULL;
}

FPS_TestExecutive::~FPS_TestExecutive()
{
	MPC_Disconnect(m_deviceHandle);
	MPC_CloseMpcDeviceHandle(m_deviceHandle);
	m_deviceHandle = NULL;
}